<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.letsiot.applications.dao.sys.SysRoleMapper">
	<resultMap id="BaseResultMap" type="com.letsiot.applications.entity.sys.SysRole">
		<id column="role_id" property="id" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_code, create_time, status, role_name, description,
		update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where role_id = #{id,jdbcType=VARCHAR}
	</select>
	<select id="selectPage" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_role where 1=1
		<if test="status != null">
			and status = #{status,jdbcType=VARCHAR}
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		sys_role
		where role_id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.letsiot.applications.entity.sys.SysRole">
		insert into sys_role (role_id,
		role_code, create_time,
		status, role_name, description,
		update_time)
		values (#{id,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=VARCHAR},
		#{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.letsiot.applications.entity.sys.SysRole">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				role_id,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.letsiot.applications.entity.sys.SysRole">
		update sys_role
		<set>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.letsiot.applications.entity.sys.SysRole">
		update sys_role
		set role_code = #{roleCode,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=VARCHAR},
		role_name = #{roleName,jdbcType=VARCHAR},
		description =
		#{description,jdbcType=VARCHAR},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where role_id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="selectMenuByRoleId" parameterType="java.lang.String"
		resultType="com.letsiot.applications.entity.sys.SysMenu">
		SELECT sm.id, sm.catalog_id catalogId, sm.menu_name
		menuName, sm.url,
		sm.icon_path iconPath, sm.description, sm.create_time
		createTime,
		sm.status FROM
		sys_menu sm WHERE sm.id in (SELECT
		srm.menu_id FROM sys_role_menu srm WHERE
		srm.role_id=#{roleId,jdbcType=VARCHAR})
	</select>
	<select id="selectMenuByRoleIdAndParentId" parameterType="java.lang.String"
		resultType="com.letsiot.applications.entity.sys.SysMenu">
		SELECT sm.id, sm.catalog_id catalogId, sm.menu_name
		menuName, sm.url,
		sm.icon_path iconPath FROM
		sys_menu sm WHERE status != 'N'
		<if test="roleId != null">
			and sm.id in (SELECT
			srm.menu_id FROM sys_role_menu srm
			WHERE
			srm.role_id=#{roleId,jdbcType=VARCHAR})
		</if>
		<if test="parentId != null">
			and catalog_id=#{parentId,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectRoleSelect" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from
		sys_role where status ='1'
	</select>
	<select id="getAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		sys_role where status ='1'
	</select>
	<select id="getAllPage" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		sys_role where status ='1'
	</select>
	<select id="findByRoleCode" parameterType="java.lang.String" resultType="java.lang.String">
		select * from  sys_role where role_code = #{roleCode}
	</select>
</mapper>